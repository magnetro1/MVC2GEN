[ENABLE]
{$lua}
-- Variables and Functions
outPath = "G:\\Emulators\\PCSX2\\pcsx2\\Cheat Tables+\\CSV_Input\\MvC2DataShort_Original.csv"
_starting_new_write_flag = false
contScript = true
data_table = {}
function readTF()
	tfPointer = ("pcsx2.exe+271A324")
    readITF   = readInteger(tfPointer)
	return(readITF)
end

function csv_write(path, data)
	separator = ","
	local file_handle = assert(io.open(path, "a"))
	local output_string = ""
	if _starting_new_write_flag == false then
	  for i = 0, #data, 1 do
		if i < #data then
			output_string = output_string .. data[i].desc .. separator
		else
			output_string = output_string .. data[i].desc
		end
	  end
	  _starting_new_write_flag = true
	  file_handle:write(output_string)
	  file_handle:write("\n")
	  output_string = ""
	end
	for i = 0, #data, 1 do
	  if i < #data then
		  output_string = output_string .. data[i].val .. separator
	  else
		  output_string = output_string .. data[i].val
	  end
	end
	file_handle:write(output_string)
	file_handle:write("\n")
	file_handle:close()
	return true
end
currentFrame = readTF()
-- Main Script
address_list = getAddressList()

v0= address_list.getMemoryRecordByDescription("Total_Frames")
v1= address_list.getMemoryRecordByDescription("P1_Input_DEC")
v2= address_list.getMemoryRecordByDescription("P2_Input_DEC")
v3= address_list.getMemoryRecordByDescription("P1_A_PunchKick")
v4= address_list.getMemoryRecordByDescription("P1_B_PunchKick")
v5= address_list.getMemoryRecordByDescription("P1_C_PunchKick")
v6= address_list.getMemoryRecordByDescription("P2_A_PunchKick")
v7= address_list.getMemoryRecordByDescription("P2_B_PunchKick")
v8= address_list.getMemoryRecordByDescription("P2_C_PunchKick")
v9= address_list.getMemoryRecordByDescription("P1_A_Action_Flags")
v10= address_list.getMemoryRecordByDescription("P1_B_Action_Flags")
v11= address_list.getMemoryRecordByDescription("P1_C_Action_Flags")
v12= address_list.getMemoryRecordByDescription("P2_A_Action_Flags")
v13= address_list.getMemoryRecordByDescription("P2_B_Action_Flags")
v14= address_list.getMemoryRecordByDescription("P2_C_Action_Flags")
v15= address_list.getMemoryRecordByDescription("P1_A_Is_ProxBlock")
v16= address_list.getMemoryRecordByDescription("P1_B_Is_ProxBlock")
v17= address_list.getMemoryRecordByDescription("P1_C_Is_ProxBlock")
v18= address_list.getMemoryRecordByDescription("P2_A_Is_ProxBlock")
v19= address_list.getMemoryRecordByDescription("P2_B_Is_ProxBlock")
v20= address_list.getMemoryRecordByDescription("P2_C_Is_ProxBlock")


v0_prev = v0.Value

-- Condition Loop
while (currentFrame ~= v0.Value) and contScript do
  while v0.Value == v0_prev do
		if isKeyPressed(VK_HOME) then
			contScript = false
			break
		end
	end

data_table[0]= {desc = v0.Description,val = v0.Value}
data_table[1]= {desc = v1.Description,val = v1.Value}
data_table[2]= {desc = v2.Description,val = v2.Value}
data_table[3]= {desc = v3.Description,val = v3.Value}
data_table[4]= {desc = v4.Description,val = v4.Value}
data_table[5]= {desc = v5.Description,val = v5.Value}
data_table[6]= {desc = v6.Description,val = v6.Value}
data_table[7]= {desc = v7.Description,val = v7.Value}
data_table[8]= {desc = v8.Description,val = v8.Value}
data_table[9]= {desc = v9.Description,val = v9.Value}
data_table[10]= {desc = v10.Description,val = v10.Value}
data_table[11]= {desc = v11.Description,val = v11.Value}
data_table[12]= {desc = v12.Description,val = v12.Value}
data_table[13]= {desc = v13.Description,val = v13.Value}
data_table[14]= {desc = v14.Description,val = v14.Value}
data_table[15]= {desc = v15.Description,val = v15.Value}
data_table[16]= {desc = v16.Description,val = v16.Value}
data_table[17]= {desc = v17.Description,val = v17.Value}
data_table[18]= {desc = v18.Description,val = v18.Value}
data_table[19]= {desc = v19.Description,val = v19.Value}
data_table[20]= {desc = v20.Description,val = v20.Value}

	v0_prev = v0.Value
	csv_write(outPath, data_table)
end
{$asm}
[DISABLE]
